package com.yks.leetcode;

/**
 * @Description: 190. 颠倒二进制位
 * @Author: Yu ki-r
 * @CreateDate: 2021/1/17 12:43
 */
public class Solution190 {
    /**
     * 颠倒给定的 32 位无符号整数的二进制位。
     * 示例 1：
     *
     * 输入: 00000010100101000001111010011100
     * 输出: 00111001011110000010100101000000
     * 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
     *      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
     * 示例 2：
     *
     * 输入：11111111111111111111111111111101
     * 输出：10111111111111111111111111111111
     * 解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
     *      因此返回 3221225471 其二进制表示形式为 10111111111111111111111111111111 。
     *
     */

    public int reverseBits(int n) {
        int res = 0;
        for (int i = 0; i < 32; i++) {
            /**
             * 1.结果左移
             * 2.结果加上n&1的值
             * 3.n右移
             *
             */
            res = res << 1;
            res += n & 1;
            n = n >> 1;
        }
        return res;

    }
}
